<section class="light" id="about">
    @if (hero is not null)
    {
        <img class="background" src="@(hero.Src)" alt="@(hero.Alt)" />
    }
    <h2>Publications</h2>
    <div class="portfolio-container">
    @if (projects is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="container" style="background-color: white; text-align: center;">
            @foreach (var project in projects)
            {
                <div class="box" key="@project.Title">
                    <a href="@project.Url" target="_blank" rel="noopener noreferrer">
                        <h3 style="flex-basis: 40px;">@project.Title</h3>
                    </a>
                    <p class="small">@project.Description</p>
                </div>
            }
        </div>
    }
    </div>
    <!-- Go top  -->
    <div style="position: absolute; bottom: 1rem; left: 50%;">
        <a href="#home" target="_top">
            <img src="images/up-arrow.svg" style="height: 3rem; width: 3rem;" alt="scroll up" />
        </a>
    </div>
</section>

@code {
    [Parameter, EditorRequired]
    public required HttpClient Http { get; set; }

    [Parameter, EditorRequired]
    public required HeroImageService HeroImageService { get; set; }

    private AboutMe? aboutMe;
    private List<Project>? projects;
    private HeroImage? hero;

    protected override async Task OnInitializedAsync()
    {
        projects = await Http.GetFromJsonAsync<List<Project>>("sample-data/projects.json");
        aboutMe = await Http.GetFromJsonAsync<AboutMe>("sample-data/aboutme.json");
        hero = await HeroImageService.GetHeroAsync(img => img.Name is "about");

    }
}
